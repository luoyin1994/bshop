style
  :stylus
    icon-size = 24px
    icomoon-font-path ?= "/font/fonts"
    icon-sun = "\e902"
    icon-catalog = "\e900"
    icon-moon = "\e901"

    @font-face
      font-family 'icon'
      src url(icomoon-font-path + '/icon.eot?cjds68')
      src url(icomoon-font-path + '/icon.eot?cjds68#iefix') format('embedded-opentype'), url(icomoon-font-path + '/icon.ttf?cjds68') format('truetype'), url(icomoon-font-path + '/icon.woff?cjds68') format('woff'), url(icomoon-font-path + '/icon.svg?cjds68#icon') format('svg')
      font-weight normal
      font-style normal

    .icon
      font-family 'icon' !important
      speak none
      font-style normal
      font-weight normal
      font-variant normal
      text-transform none
      font-size icon-size

      /* Better Font Rendering =========== */
      -webkit-font-smoothing antialiased
      -moz-osx-font-smoothing grayscale

    .icon-sun
      &:before
        content icon-sun

    .icon-catalog
      &:before
        content icon-catalog

    .icon-moon
      &:before
        content icon-moon

    .icon-Aa
      &:before
        content 'Aa'
        font-weight bold





  :stylus
    @import '../../public/libs/stylus/box-shadow-around.styl' //引用@import在没有设置引用路径之前是根据相对路径来计算的
    #footer
      li-len = 3
      item-height = 65px
      item-font-color = #e7e7e7
      footer-bg-color = rgba(34, 34, 34, 0.95)
      display none
      position absolute
      left 0
      right 0
      bottom 0
      z-index 1
      background-color footer-bg-color
      color item-font-color
      font-weight 500
      ul, li
        margin 0
        padding 0
      .item
        display inline-block
        width (100% / li-len)
        list-style none
        line-height item-height
        text-align center
        .icon
          cursor pointer
      .pannel
        dt-weight = 1
        dd-total-weight = 4
        weight-amount = dt-weight + dd-total-weight
        dt-width = (100% / weight-amount) * dt-weight
        dd-total-width = (100% / weight-amount) * dd-total-weight
        position absolute
        bottom 100%
        left 0
        right 0
        z-index -1
        background-color footer-bg-color
        padding 3% 5%
        -webkit-transition all 0.3s //- css3手机端也需要考虑兼容问题
        -moz-transition all 0.3s
        -ms-transition all 0.3s
        -o-transition all 0.3s
        transition all 0.3s
        height 0
        dl
          line-height item-height
          text-align center
          dt, dd
            display inline-block
          dt
            width dt-width
          dd
            span
              cursor pointer
              display inline-block

        &.pannel-Aa
          .font
            dd-amount = 2
            dd
              width (dd-total-width / dd-amount)
              span
                height (item-height / 1.8)
                width 75%
                border-radius 15px
                border 1px solid #ffffff
                box-shadow-around 1px 1px 0px #44cc43 true
                line-height @height
                vartical-align middle
          .bg-color
            dd-amount = 5
            dd
              width (dd-total-width / dd-amount)
              span
                height (item-height / 2)
                width @height
                border-radius 50%
                vertical-align -10px


footer#footer
  ul
    li.item
      i.icon.icon-catalog
    li.item
      i.icon.icon-Aa
    li.item
      i.icon.icon-moon.change-style

  .pannel.pannel-Aa
    dl.font
      dt 字号
      dd: span.enlarge 大
      dd: span.diminish 小
    dl.bg-color
      dt 背景
      dd: span.pinklight
      dd: span.yellowlight
      dd: span.white
      dd: span.greenlight
      dd: span.bluelight



script.
    (function () {
        /**
         *  对应注册一个对象的换出和隐藏事件
         */
        $().__proto__.eventShowOne = function ($showEl, $event, $showEls) {// zepto中通过对$().__proto__设置对象方法达到普通对象调用对象方法的目的
            $(this).on('click', function () {
                if ($showEl.css('opacity') == 0) {//在style中设置过渡属性，在js中操作dom设置css属性实现动画
                    if ($showEls) {
                        $showEls.css({//点击当前按钮时清除其他按钮已经打开的样式
                            opacity: 0,
                            height : 0
                        })
                    }
                    $showEl.css({
                        opacity: 1,
                        height : '200%'
                    })
                } else {
                    $showEl.css({
                        opacity: 0,
                        height : 0
                    })
                }
            })
            return true
        }
        /**
         *  对应注册多个对象的换出和隐藏事件
         */
        //一些手机不支持es6语法，用es6后导致浏览器端可以实现手机端不可以实现的问题，应该考虑手机端es6的支持
        $().__proto__.eventShowMany = function ($showEls, $i, $event) {//$i为从后排除//一个函数不行，试着将一个函数分解为两个函数来处理，更加简洁明了
            if (!$i) $i = 0
            if (!$event) $event = 'click'
            for (var i = 0, len = $(this).length - $i; i < len; i++) {
                $($(this)[i]).eventShowOne($($showEls[i]), $event, $showEls)
            }
        }

        /**
         * 点击一个元素使另一个元素字体放大缩小
         * @param eventEl 点击的元素
         * @param scaleEls 点击后缩放的元素，单个为或相同多个直接传入，
         *                 多个可以传入对象，格式为{
           *                        element1:{
                                      el:真正的对象
                                      scale:...
                                      scaleExtreme:...
           *                        }
           *                 }
         * @param scaleAttr 必须，正为放大，负为缩小，为每个传入的scaleEls添加箱体用的属性，单个是number，多个是arr
         *                  格式为 1 [1.1,1.8]
         * @param event 可选，默认为click
         */
        function scale(eventEl, scaleEls, scaleAttr, event) {//scaleEls可以自定义多个也可以是一个
            var scaleMax = 1.2  //设置title的最大缩放
            var scaleMin = 0.8  //设置title的最小缩放
            if (!event) event = 'click'
            var len = scaleEls.length
            if (len) {//如果传进来的是一个$()对象//纯js对象length属性为undefined
                if (len == 1) {
                    scaleEls = {
                        title: {
                            el: scaleEls
                        }
                    }

                } else {
                    scaleEls = {
                        e: {
                            el: scaleEls
                        }
                    }
                }
            }
            if (typeof scaleAttr == 'number' && !isNaN(scaleAttr)) {//只有变化率没有极值的时候
                for (var key in scaleEls) {
                    scaleEls[key].scale = scaleAttr
                }
            }
            if (Array.isArray(scaleAttr)) { //有则为所有需要改变的目标对象强制增加或修改缩放值
                for (var key in scaleEls) {
                    scaleEls[key].scale        = scaleAttr[0]
                    scaleEls[key].scaleExtreme = scaleAttr[1]
                }
            }
            var scaleRatio = 1
            if (scaleEls.title && scaleEls.title.scale > 1) scaleEls.title.scaleExtreme = scaleMax //首先要判断title的存在，不认后报错
            if (scaleEls.title && scaleEls.title.scale < 1) scaleEls.title.scaleExtreme = scaleMin
            var initFontSizes = []
            for (key in scaleEls) {
                var initFontSize = scaleEls[key].el.css('font-size').split('px')[0]
                initFontSizes.push(initFontSize)
            }
            eventEl.on(event, function () { //添加事件
                for (key in scaleEls) {
                    var scaleRatio = scaleEls[key].el.css('font-size').split('px')[0] / initFontSizes //变动的就需要用变动的数
                    if (scaleEls[key].scale < 1 && scaleRatio < scaleEls[key].scaleExtreme) {
                        scaleEls[key].el.css({
                            'font-size': scaleEls[key].el.css('font-size')
                        })
                    } else if (scaleEls[key].scale > 1 && scaleRatio > scaleEls[key].scaleExtreme) {
                        scaleEls[key].el.css({
                            'font-size': scaleEls[key].el.css('font-size')
                        })
                    } else {
                        scaleEls[key].el.css({
                            'font-size': scaleEls[key].el.css('font-size').split('px')[0] * scaleEls[key].scale + 'px'
                        })
                    }
                }
            })
        }
    })()
script.
    (function () {
        var body         = $('body')
        var footer       = $('#footer')
        var container    = $('#container')
        var title        = container.find('h1')
        var passage      = container.find('p')
        var pageTurning  = container.find('.page-turning')
        //为前两个footer item添加点击事件换出对应面板
        var footerItems  = footer.find('li.item')
        var showElements = footer.find('.pannel')
        footerItems.eventShowMany(showElements, 1)//传入1是为了不给最后一个item添加换出事件
        //改变阅读样式
        var bodyBg         = body.css('background-color')
        var titleColor     = title.css('color')
        var passageColor   = passage.css('color')
        var pageTurningCSS = {
            fontWeight: pageTurning.css('font-weight'),
            color     : pageTurning.css('color'),
            background: pageTurning.css('background')
        }
        footerItems.last().click(function () {
            var changeStyle = $(this).find('.change-style')
            if (changeStyle.hasClass('icon-moon')) {//设置夜晚样式
                body.css({
                    'background-color': '#262626'
                })
                title.css({
                    'color': '#eadc89'
                })
                passage.css({
                    'color': '#c5bfbc'
                })
                pageTurning.css({
                    'font-weight': 'bold',
                    'color'      : '#222222',
                    'background' : '#dcddcc'
                })
                changeStyle.removeClass('icon-moon').addClass('icon-sun')
            } else {                                  //恢复白天样式
                body.css({
                    'background-color': bodyBg
                })
                title.css({
                    'color': titleColor
                })
                passage.css({
                    'color': passageColor
                })
                pageTurning.css({
                    'font-weight': pageTurningCSS.fontWeight,
                    'color'      : pageTurningCSS.color,
                    'background' : pageTurningCSS.background
                })
                changeStyle.removeClass('icon-sun').addClass('icon-moon')
            }

        })
        //为Aa面板添加事件
        //  增加减小字号事件
        var enlarge  = footer.find('.enlarge')
        var diminish = footer.find('.diminish')
        scale(enlarge, passage, 1.05)
        scale(diminish, passage, 0.95)
        scale(enlarge, title, 1.03)
        scale(diminish, title, 0.97)
        //  改变背景
        var bgColors = footer.find('.bg-color span')
        for (var i = 0, len = bgColors.length; i < len; i++) {
            $(bgColors[i]).click(function () {
                var bgColor = $(this).css('background-color')
                body.css({
                    'background-color': bgColor
                })
            })
        }
    })()





